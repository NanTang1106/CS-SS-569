pairs(bgs_girls, cex=0.7, pch=16)
pairs(bgs_girls, cex=0.6, pch=16)
pairs(bgs_girls, cex=0.5, pch=16)
pairs(bgs_girls, cex=0.6, pch=16)
## b
fit1 <- lm(bgs_girls$BMI18~bgs_girls$WT9 + bgs_girls$ST9)
summary(fit1)
## b
attach(bgs_girls)
fit1 <- lm(BMI18~bgs_girls$WT9 + bgs_girls$ST9)
fit1 <- lm(BMI18~WT9 + ST9)
summary(fit1)
fit2 <- lm(BMI18~bgs_girls ~)
## b
fit1 <- lm(formula=BMI18~WT9 + ST9, data=bgs_girls)
fit2 <- lm(formula=BMI18 ~., data=bgs_girls)
summary(fit2)
summary(fit1)
summary(fit2)
predict(fit1)
ncol(bgs_girls)
nrow(bgs_girls)
residuals(fit1)
sum(residuals(fit1)^2)
## c
sse_full <- sum(residuals(fit2)^2)
sse_red <- sum(residuals(fit1)^2)
## c
n <- nrow(bgs_girls)
df_full <- n - 6
df_red <- n - 3
sse_full <- sum(residuals(fit2)^2)
sse_red <- sum(residuals(fit1)^2)
sse_full
sse_red
f_value <- ((sse_reduce - sse_full) / (df_red - df_full)) / (sse_full / df_full)
f_value <- ((sse_red - sse_full) / (df_red - df_full)) / (sse_full / df_full)
f_value
anova(fit1, fit2)
n
## d
resid_full <- residuals(fit2)
hist(resid_full)
hist(resid_full, xlim=c(-10, 10))
hist(resid_full, xlim=c(-10, 10), xlab='Residuals', probability = T)
hist(resid_full, xlim=c(-10, 10), xlab='Residuals',
main='Histogram of Residuals', probability = T)
plot(fit2, which=1)
plot(fit2, which=1, pch=16, cex=0.75)
sse_full
fit2
summary(fit2)
293.04/64
sqrt(4.57)
summary.aov(fit2)
sqrt(4.58)
resid_full/70
sse_full/n
sse_full/64
sqrt(4.578735)
MASS::boxcox(fit2, plotit=T)
plot(fit1)
pairs(bgs_girls, cex=0.6, pch=16)
MASS::boxcox(fit2, family='yjPower', plotit=T)
bgs_girls$BMI18>0
## f
p_val <- summary(fit2)$coefficients[2:6, 4]
p_val
p_bonf <- p.adjust(p_vals,method = "bonferroni")
p_val < 0.1
p_val < 0.1/5
holm_val <- 0.1 / (1:5)
holm_val
holm_val <- 0.1 / (5:1)
holm_val
sort(p_val) < holm_val
fdr_val <- 0.1 * (1:5) / 5
fdr_val
sort(p_val) < fdr_val
## question 2
# a
bgs_all <- BGSall %>% select(HT18, HT9, Sex)
class(bgs_all$Sex)
head(bgs_all)
bgs_all$Sex <- as.factor(bgs_all$Sex)
class(bgs_all$Sex)
library(ggplot2)
p <- ggplot(data=bgs_all, mapping=aes(y=HT19, x=HT9)) + geom_point(aes(col=sex))
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT19, x=HT9)) + geom_point(aes(col=Sex))
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) + geom_point(aes(col=Sex))
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) + geom_point(aes(col=Sex)) + theme_bw()
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) + geom_point(aes(col=Sex), labels=c('Men', 'Women')) + theme_bw()
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) + geom_point(aes(col=Sex), label=c('Men', 'Women')) + theme_bw()
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex), label=c('Men', 'Women')) +
theme_bw() +
theme(legend.text = c('Men', 'Women'))
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
theme_bw() +
theme(legend.text = c('Men', 'Women'))
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
theme_bw() +
theme(legend.text = element_text(c('Men', 'Women')))
p
## question 2
# a
bgs_all <- BGSall %>% select(HT18, HT9, Sex) %>% mutate(Sex = replace(Sex, 0, 'men'))
bgs_all
## question 2
# a
bgs_all <- BGSall %>% select(HT18, HT9, Sex) %>% mutate(Sex = replace(Sex, 0, 'men'))
## question 2
# a
bgs_all <- BGSall %>% select(HT18, HT9, Sex) %>% mutate(Sex = replace(Sex, Sex==0, 'men'))
bgs_all
## question 2
# a
bgs_all <- BGSall %>% select(HT18, HT9, Sex) %>%
mutate(Sex = replace(Sex, Sex==0, 'Men')) %>%
mutate(Sex = replace(Sex, Sex=='1', 'Women'))
bgs_all
bgs_all$Sex <- as.factor(bgs_all$Sex)
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
theme_bw() +
theme(legend.text = element_text(c('Men', 'Women')))
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
theme_bw()
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
theme_bw() +
theme(legend.position = bottom)
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
theme_bw() +
theme(legend.position = 'bottom')
p
# b
fit1 <- lm(data=bgs_all, formula = HT18~Sex + HT9)
summary
sfit1ummary()
summary(fit1)
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
geom_smooth(method = 'lm', formula = HT18~HT9+Sex)
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
geom_smooth(method = 'lm', formula = y~x+Sex)
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
geom_smooth(method = 'lm', formula = HT18~HT9+Sex, data=bgs_all)
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
geom_smooth(method = 'lm', inherit.aes = T, formula=y~x)
p
p <- ggplot(data=bgs_all, mapping=aes(y=HT18, x=HT9)) +
geom_point(aes(col=Sex)) +
geom_smooth(method = 'lm', inherit.aes = T, formula=y~x+Sex)
p
# b
fit1 <- lm(data=bgs_all[Sex=='Women',], formula = HT18~Sex + HT9)
# b
fit1 <- lm(data=bgs_all[bgs_all$Sex=='Women',], formula = HT18~Sex + HT9)
# b
women_dt <- bgs_all %>% select(Sex=='Women')
# b
women_dt <- bgs_all %>% select(Sex=='Women')
bgs_all
bgs_all%>%select(Sex)
# b
women_dt <- bgs_all %>% filter(Sex=='Women')
women_dt
fit1 <- lm(data=women_dt, formula = HT18~ HT9)
summary(fit1)
# b
women_dt <- bgs_all %>% filter(Sex=='Men')
fit1 <- lm(data=women_dt, formula = HT18~ HT9)
summary(fit1)
# b
fit1 <- lm(data=bgs_all, formula = HT18 ~ HT9 + Sex)
summary(fit1)
women_inter <- summary(fit1)$coefficients[3, 1] + summary(fit1)$coefficients[1, 1]
women_inter
new_pt <- data.frame(Sex='Women', HT9=135)
predict(fit1, new_pt)
new_pt2 <- data.frame(Sex='Women', HT9=137)
predict(fit1, new_pt2)
166.429 - 166.4291
168.3492 166.4291
168.3492- 166.4291
summary(fit1)
nrow(bgs_all)
se_inter <- summary(fit1)$coefficients[3,2]
se_inter
diff_inter <- summary(fit1)$coefficients[3,1]
diff_inter
se * qt(0.95, df=133)
se_inter * qt(0.95, df=133)
qt(0.95, df=133)
qt(0.95, df=133)
diff_inter - se_inter * qt(0.95, df=133)
diff_inter + se_inter * qt(0.95, df=133)
c(diff_inter + se_inter * qt(0.95, df=133), diff_inter - se_inter * qt(0.95, df=133))
summary(fit2)
summary(fit10)
summary(fit1)
# c
fit_height <- lm(data=bgs_all, formula = HT18 ~ HT9 + Sex)
## question 2
# a
bgs_all <- BGSall %>% select(HT18, HT9, HT2, Sex) %>%
mutate(Sex = replace(Sex, Sex==0, 'Men')) %>%
mutate(Sex = replace(Sex, Sex=='1', 'Women'))
head(bgs_all)
fit_height2 <- lm(data=bgs_all, formular = HT18 ~ HT2 + HT9 + Sex )
fit_height2 <- lm(data=bgs_all, formula = HT18 ~ HT2 + HT9 + Sex )
fit_height3 <- lm(data=bgs_all, formula = HT18 ~ HT2 + HT9 + Sex + Sex:HT2 + Sex:HT9)
summary(fit_height3)
fit_height4 <- lm(data=bgs_all, formula = HT2 + HT9 + HT2:HT9 + Sex + Sex:HT2 + Sex:HT9 + Sex:HT2:HT9)
fit_height4 <- lm(data=bgs_all, formula = HT2:HT9:Sex)
fit_height4 <- lm(data=bgs_all, formula = HT18 ~ HT2 + HT9 + HT2:HT9 + Sex + Sex:HT2 + Sex:HT9 + Sex:HT2:HT9)
fit_height4
summary(fit_height)
summary(fit_height2)
pred_pt1 <- data.frame(HT2=90, HT9=135, Sex='Women')
predict(pred_pt1, fit_height)
predict(fit_height, pred_pt1)
predict(fit_height2, pred_pt1)
predict(fit_height3, pred_pt1)
predict(fit_height4, pred_pt1)
resid_1 <- residuals(fit_height)
n <- nrow(bgs_all)
n
sse_1 <- sum(residuals(fit_height)^2)
sse_2 <- sum(residuals(fit_height2)^2)
sse_3 <- sum(residuals(fit_height3)^2)
sse_4 <- sum(residuals(fit_height4)^2)
sse_4
sse_3
summary(fit_height4)
summary(fit_height)
df_all <- c(n-3, n-4, n-6, n-8)
sse_all <- c(sse_1, sse_2, sse_3, sse_4)
sse_all / df_all
sse_all
df_all
anova(fit1, fit2)
## b
fit1 <- lm(formula=BMI18~WT9 + ST9, data=bgs_girls)
fit2 <- lm(formula=BMI18 ~., data=bgs_girls)
## c
n <- nrow(bgs_girls)
sse_full <- sum(residuals(fit2)^2)
sse_red <- sum(residuals(fit1)^2)
df_full <- n - 6
df_red <- n - 3
f_value <- ((sse_red - sse_full) / (df_red - df_full)) / (sse_full / df_full)
f_value
anova(fit1, fit2)
anova(fit_height, fit_height2)
anova(fit_height2, fit_height3)
summary(fit_height2)
anova(fit_height, fit_height2)
anova(fit_height, fit_height3)
anova(fit_height, fit_height4)
anova(fit_height3, fit_height4)
anova(fit_height2, fit_height3)
anova(fit_height3, fit_height4)
anova(fit_height2, fit_height3)
## b
fit1 <- lm(formula=BMI18~WT9 + ST9, data=bgs_girls)
library(alr4)
## question 1
## a
bgs_girls <- BGSgirls %>% select(WT2, HT2, WT9, HT9, ST9, BMI18)
pairs(bgs_girls, cex=0.6, pch=16)
print(cor(bgs_girls))
## question 1
## a
bgs_girls <- BGSgirls %>% select(WT2, HT2, WT9, HT9, ST9, BMI18)
library(dplyr)
## question 1
## a
bgs_girls <- BGSgirls %>% select(WT2, HT2, WT9, HT9, ST9, BMI18)
pairs(bgs_girls, cex=0.6, pch=16)
print(cor(bgs_girls))
## b
fit1 <- lm(formula=BMI18~WT9 + ST9, data=bgs_girls)
fit2 <- lm(formula=BMI18 ~., data=bgs_girls)
## c
n <- nrow(bgs_girls)
sse_full <- sum(residuals(fit2)^2)
sse_red <- sum(residuals(fit1)^2)
df_full <- n - 6
df_red <- n - 3
f_value <- ((sse_red - sse_full) / (df_red - df_full)) / (sse_full / df_full)
anova(fit1, fit2)
sqrt(11.78)
sqrt(11.86)
sqrt(11.57)
sqrt(11.64)
sqrt(11.51)
?I
ln(49)
log(49) + log(9)
data(yogurt)
round(3.44444, 3)
options('digits')
yr <- 45
K <- 1
p0 <- 0.058
rt <- 3
decimal_num <- 10
keep_decimal <- function(origin_num, decimal_place) {
temp_num <- floor(origin_num * 10^(decimal_place))
print(temp_num)
return(temp_num / 10^(decimal_place))
}
interest_cal <- function(curr_p, decimal_place) {
new_p <- curr_p + rt * curr_p * (1 - curr_p)
return(keep_decimal(new_p, decimal_place))
}
interest_cal(p0, decimal_num)
interest_cal(0.221908, decimal_num)
options(digits=10)
interest_cal(0.221908, decimal_num)
interest_cal(0.7399025186, decimal_num)
options(digits=13)
interest_cal(0.221908, decimal_num)
interest_cal(0.7399025186, decimal_num)
p_set <- numeric(yr)
p_set[1] <- p0
p_set
new_p <- inters_cal(p_set[i], decimal_num)
new_p <- interst_cal(p_set[i], decimal_num)
new_p <- interest_cal(p_set[i], decimal_num)
for (i in 1:yr) {
new_p <- interest_cal(p_set[i], decimal_num)
}
p_set[i]
p_set[1] <- p0
i
p_set[1]
p_set[i+1] <- new_p
for (i in 1:yr) {
new_p <- interest_cal(p_set[i], decimal_num)
p_set[i+1] <- new_p
}
p_set
p_set * 1000000
for (i in 1:yr) {
new_p_9 <- interest_cal(p_set_9[i], 9)
p_set_9[i+1] <- new_p_9
new_p_10 <- interest_cal(p_set_10[i], 10)
p_set_10[i+1] <- new_p_10
}
p_set_9 <- numeric(yr)
p_set_9[1] <- p0
p_set_10 <- numeric(yr)
p_set_10[1] <- p0
# keep decimal to given level
keep_decimal <- function(origin_num, decimal_place) {
temp_num <- floor(origin_num * 10^(decimal_place))
print(temp_num)
return(temp_num / 10^(decimal_place))
}
# calculate balance at t + delta t
interest_cal <- function(curr_p, decimal_place) {
new_p <- curr_p + rt * curr_p * (1 - curr_p)
return(keep_decimal(new_p, decimal_place))
}
for (i in 1:yr) {
new_p_9 <- interest_cal(p_set_9[i], 9)
p_set_9[i+1] <- new_p_9
new_p_10 <- interest_cal(p_set_10[i], 10)
p_set_10[i+1] <- new_p_10
}
temp_num <- floor(origin_num * 10^(decimal_place))
# keep decimal to given level
keep_decimal <- function(origin_num, decimal_place) {
temp_num <- floor(origin_num * 10^(decimal_place))
return(temp_num / 10^(decimal_place))
}
# calculate balance at t + delta t
interest_cal <- function(curr_p, decimal_place) {
new_p <- curr_p + rt * curr_p * (1 - curr_p)
return(keep_decimal(new_p, decimal_place))
}
for (i in 1:yr) {
new_p_9 <- interest_cal(p_set_9[i], 9)
p_set_9[i+1] <- new_p_9
new_p_10 <- interest_cal(p_set_10[i], 10)
p_set_10[i+1] <- new_p_10
}
data.frame(0:45, p_set_9, p_set_10)
result <- data.frame(0:45, p_set_9, p_set_10)
colnames(result, c('Year', 'Balance (9 decimals)', 'Balance (10 decimals)'))
result <- data.frame(0:45, p_set_9, p_set_10)
colnames(result, c('Year', 'Balance (9 decimals)', 'Balance (10 decimals)'))
result
names(result, c('Year', 'Balance (9 decimals)', 'Balance (10 decimals)'))
names(result, c('Year', 'Balance_9_decimal', 'Balance_10_decimal'))
names(result) <- c('Year', 'Balance_9_decimal', 'Balance_10_decimal')
result
names(result) <- c('Year', 'Balance 9_decimal', 'Balance_10_decimal')
names(result) <- c('Year', 'Balance (9 decimals)', 'Balance (10 decimals)')
result
result <- data.frame(0:45, p_set_9 * 1000000, p_set_10 * 1000000)
names(result) <- c('Year', 'Balance (9 decimals)', 'Balance (10 decimals)')
result
View(result)
row.names(result) <- NULL
result
print(result, row.names = F)
print(result, row.names = F)
y <- rnorm(20, 0, 1)
x1 <- runif(20, 1, 5)
x2 <- c(rep(c(0, 1), 10))
x2
x2 <- c(rep(c(1,0, 1, 1), 5))
y <- rnorm(20, 0, 1)
x1 <- runif(20, 1, 5)
x2 <- c(rep(c(0, 1), 10))
x3 <- c(rep(c(1,0, 1, 1), 5))
fit1 <- lm(y~x1+x2+x3)
summary(fit1)
fit1 <- lm(y~x1+x2+x3+x2:x3)
summary(fit1)
plot(fit1)
plot(y, x1)
abline(fit1)
fit1 <- lm(y~x2+x3+x2:x3)
fit1
fit1 <- lm(y~x2+x3+x2*x3)
ffit1
fit1
library(sf)
library(tmap)
library(tidyverse)
data(World, metro)
nyc_rent <- tm_shape(nyc.bound) +
tm_polygons(col='rent2008', palette='BrBG',
border.col='white', border.alpha = 0.5,
title='Rent in 2008') +
tm_layout(legend.text.size = 0.5,
legend.width = 0.7,
frame = FALSE)
nyc_forhis <- tm_shape(nyc.bound) +
tm_polygons(col='forhis08', palette='-RdYlGn',
border.col='white', border.alpha = 0.5,
title='Hispanic population in 2008') +
tm_layout(legend.text.size = 0.5,
legend.width = 0.7,
frame = FALSE)
nyc_pubast <- tm_shape(nyc.bound) +
tm_polygons(col='pubast00', palette='Blues',
border.col='white', border.alpha = 0.5,
title='% of households receiving \nPublic assistance in 2008') +
tm_layout(legend.text.size = 0.5,
legend.width = 0.7,
frame = FALSE)
three <- tmap_arrange(nyc_rent, nyc_forhis, nyc_pubast, nrow = 1)
library(sf)
library(tmap)
library(tidyverse)
nyc.bound <- st_read("nyc/nyc.shp")
setwd('/Users/nantang/Google Drive/CS&SS 569/Lab')
## Shape file
nyc.bound <- st_read("nyc/nyc.shp")
tmap_mode("view")
tm_shape(nyc.bound) +
tm_polygons(col='rent2008', palette='-RdYlGn',
border.col='black', border.lwd=0.1,
title='Rent in 2008') +
tm_basemap(server = "OpenStreetMap", alpha = 0.5)
nyc_rent <- tm_shape(nyc.bound) +
tm_polygons(col='rent2008', palette='BrBG',
border.col='white', border.alpha = 0.5,
title='Rent in 2008') +
tm_layout(legend.text.size = 0.5,
legend.width = 0.7,
frame = FALSE)
nyc_forhis <- tm_shape(nyc.bound) +
tm_polygons(col='forhis08', palette='-RdYlGn',
border.col='white', border.alpha = 0.5,
title='Hispanic population in 2008') +
tm_layout(legend.text.size = 0.5,
legend.width = 0.7,
frame = FALSE)
nyc_pubast <- tm_shape(nyc.bound) +
tm_polygons(col='pubast00', palette='Blues',
border.col='white', border.alpha = 0.5,
title='% of households receiving \nPublic assistance in 2008') +
tm_layout(legend.text.size = 0.5,
legend.width = 0.7,
frame = FALSE)
three <- tmap_arrange(nyc_rent, nyc_forhis, nyc_pubast, nrow = 1)
three
tmap_mode("plot")
three
